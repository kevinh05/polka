{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khyy4\\\\Documents\\\\Code-Projects\\\\polkahack\\\\pookey\\\\src\\\\main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Sr25519Account } from \"@unique-nft/sr25519\";\nimport { ThinClient } from \"@unique-nft/sdk\";\n//import { Sdk } from '@unique-nft/sdk';\n\n// import { Web3AccountsOptions } from '@polkadot/extension-inject/types';\n// import { Account } from '@unique-nft/accounts';\n// import { PolkadotProvider } from '@unique-nft/accounts/polkadot';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Polky = () => {\n  _s();\n  var _accountInfo$balance;\n  const [mnemonic, setMnemonic] = useState('');\n  const [firstNumber, setFirstNumber] = useState(0);\n  const [secondNumber, setSecondNumber] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [sdk, setSdk] = useState(null);\n  const [accountInfo, setAccountInfo] = useState(null);\n  useEffect(() => {\n    if (mnemonic) {\n      const account = Sr25519Account.fromUri(mnemonic);\n      const sdkInstance = new ThinClient({\n        baseUrl: 'https://rest.unique.network/opal/v1',\n        account\n      });\n      setSdk(sdkInstance);\n      const fetchAccountInfo = async () => {\n        try {\n          const address = account.address;\n          const balance = await sdkInstance.balance.get({\n            address\n          });\n          setAccountInfo({\n            address,\n            balance\n          });\n        } catch (error) {\n          console.error('Failed to fetch account information:', error);\n        }\n      };\n      fetchAccountInfo();\n    }\n  }, [mnemonic]);\n  const generateNewQuestion = () => {\n    const num1 = Math.floor(Math.random() * 10);\n    const num2 = Math.floor(Math.random() * 10);\n    setFirstNumber(num1);\n    setSecondNumber(num2);\n  };\n  const handleMnemonicSubmit = e => {\n    e.preventDefault();\n    if (mnemonic) {\n      generateNewQuestion();\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const correctAnswer = firstNumber + secondNumber;\n    if (parseInt(userAnswer) === correctAnswer) {\n      setScore(score + 1);\n      setFeedback('Correct!');\n      if (score === 10) {\n        setFeedback('Correct! NFT Successful!');\n      } else if ((score + 1) % 5 === 0) {\n        try {\n          const {\n            parsed,\n            error\n          } = await sdk.collection.create.submitWaitResult({\n            address: accountInfo.address,\n            name: \"Test collection\",\n            description: \"My test collection\",\n            tokenPrefix: \"TST\",\n            schema: {\n              schemaName: 'unique',\n              schemaVersion: '1.0.0',\n              image: {\n                urlTemplate: 'https://gateway.pinta.cloud/ipfs/{infix}'\n              },\n              coverPicture: {\n                ifpsCid: 'bafybeigdyrzt5sfp7udm7hu76uh7y26nf3efuylqabf3oclgtqy55fbzdi'\n              },\n              attributesSchema: {\n                0: {\n                  name: score\n                }\n              }\n            }\n          });\n          if (error) throw new Error(\"Error occurred while creating a collection\");\n          if (!parsed) throw new Error(\"Cannot parse results\");\n          const {\n            collectionId\n          } = parsed;\n          await sdk.token.create({\n            collectionId\n          });\n          await sdk.token.transfer({\n            collectionId,\n            tokenId: 1,\n            to: accountInfo.address\n          });\n          setFeedback('Correct! You earned an NFT!');\n        } catch (error) {\n          console.error('Failed to mint and transfer NFT:', error);\n          setFeedback('Correct! But there was an error minting the NFT.');\n        }\n      }\n    } else {\n      setFeedback(`Incorrect! The correct answer was ${correctAnswer}`);\n    }\n    setUserAnswer('');\n    generateNewQuestion();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-red-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 shadow-lg rounded-lg p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-red-700 mb-4\",\n        children: \"PolkyMath\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), !sdk ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleMnemonicSubmit,\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: mnemonic,\n          onChange: e => setMnemonic(e.target.value),\n          className: \"p-2 border border-red-300 rounded mb-4 focus:outline-none focus:ring-2 focus:ring-red-500\",\n          placeholder: \"Enter your mnemonic key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\",\n          children: \"Input Mnemonic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: firstNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), \" + \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: secondNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              className: \"flex flex-col items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: userAnswer,\n                onChange: e => setUserAnswer(e.target.value),\n                className: \"p-2 border border-red-300 rounded mb-4 focus:outline-none focus:ring-2 focus:ring-red-500\",\n                placeholder: \"Your answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xl\",\n                children: feedback\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-2xl\",\n                children: [\"Score: \", score]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), accountInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-8 p-4 border border-red-300 rounded bg-red-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold\",\n              children: \"Account Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 22\n              }, this), \" \", accountInfo.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Balance:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 22\n              }, this), \" \", (_accountInfo$balance = accountInfo.balance) === null || _accountInfo$balance === void 0 ? void 0 : _accountInfo$balance.free, \" UQs\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Polky, \"lPJ5XrKFr/ieY2oEnEnm2z6eZ0A=\");\n_c = Polky;\nexport default Polky;\n\n// import React, { useState, useEffect } from 'react';\n// import { Sr25519Account } from \"@unique-nft/sr25519\";\n// import { ThinClient } from \"@unique-nft/sdk\";\n\n// const Polky = () => {\n//   const [mnemonic, setMnemonic] = useState('');\n//   const [firstNumber, setFirstNumber] = useState(0);\n//   const [secondNumber, setSecondNumber] = useState(0);\n//   const [userAnswer, setUserAnswer] = useState('');\n//   const [score, setScore] = useState(0);\n//   const [feedback, setFeedback] = useState('');\n//   const [sdk, setSdk] = useState(null);\n//   const [accountInfo, setAccountInfo] = useState(null);\n\n//   useEffect(() => {\n//     if (mnemonic) {\n//       const account = Sr25519Account.fromUri(mnemonic);\n//       const sdkInstance = new ThinClient({\n//         baseUrl: 'https://rest.unique.network/opal/v1', \n//         account,\n//       });\n//       setSdk(sdkInstance);\n\n//       const fetchAccountInfo = async () => {\n//         try {\n//           const address = account.address;\n//           const balance = await sdkInstance.balance.get({ address });\n//           setAccountInfo({ address, balance });\n//         } catch (error) {\n//           console.error('Failed to fetch account information:', error);\n//         }\n//       };\n\n//       fetchAccountInfo();\n//     }\n//   }, [mnemonic]);\n\n//   const generateNewQuestion = () => {\n//     const num1 = Math.floor(Math.random() * 10);\n//     const num2 = Math.floor(Math.random() * 10);\n//     setFirstNumber(num1);\n//     setSecondNumber(num2);\n//   };\n\n//   const handleMnemonicSubmit = (e) => {\n//     e.preventDefault();\n//     if (mnemonic) {\n//       generateNewQuestion();\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const correctAnswer = firstNumber + secondNumber;\n//     if (parseInt(userAnswer) === correctAnswer) {\n//       setScore(score + 1);\n//       setFeedback('Correct!');\n\n//       if ((score + 1) % 5 === 0) {\n//         // Simulate NFT minting\n//         setFeedback('Correct! You earned an NFT!');\n//       }\n//     } else {\n//       setFeedback(`Incorrect! The correct answer was ${correctAnswer}`);\n//     }\n//     setUserAnswer('');\n//     generateNewQuestion();\n//   };\n\n//   return (\n//     <div className=\"flex flex-col items-center justify-center min-h-screen bg-red-50\">\n//       <div className=\"bg-red-100 shadow-lg rounded-lg p-8\">\n//         <h1 className=\"text-3xl font-bold text-red-700 mb-4\">PolkyMath</h1>\n//         {!sdk ? (\n//           <form onSubmit={handleMnemonicSubmit} className=\"flex flex-col items-center\">\n//             <input\n//               type=\"text\"\n//               value={mnemonic}\n//               onChange={(e) => setMnemonic(e.target.value)}\n//               className=\"p-2 border border-red-300 rounded mb-4 focus:outline-none focus:ring-2 focus:ring-red-500\"\n//               placeholder=\"Enter your mnemonic key\"\n//             />\n//             <button\n//               type=\"submit\"\n//               className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\n//             >\n//               Input Mnemonic\n//             </button>\n//           </form>\n//         ) : (\n//           <>\n//             <div className=\"flex justify-between\">\n//               <div>\n//                 <div className=\"text-2xl mb-4\">\n//                   <span>{firstNumber}</span> + <span>{secondNumber}</span>\n//                 </div>\n//                 <form onSubmit={handleSubmit} className=\"flex flex-col items-center\">\n//                   <input\n//                     type=\"number\"\n//                     value={userAnswer}\n//                     onChange={(e) => setUserAnswer(e.target.value)}\n//                     className=\"p-2 border border-red-300 rounded mb-4 focus:outline-none focus:ring-2 focus:ring-red-500\"\n//                     placeholder=\"Your answer\"\n//                   />\n//                   <button\n//                     type=\"submit\"\n//                     className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\n//                   >\n//                     Submit\n//                   </button>\n//                 </form>\n//                 <div className=\"mt-4\">\n//                   <p className=\"text-xl\">{feedback}</p>\n//                   <p className=\"text-2xl\">Score: {score}</p>\n//                 </div>\n//               </div>\n//               {accountInfo && (\n//                 <div className=\"ml-8 p-4 border border-red-300 rounded bg-red-50\">\n//                   <h2 className=\"text-xl font-bold\">Account Information</h2>\n//                   <p><strong>Address:</strong> {accountInfo.address}</p>\n//                   <p><strong>Balance:</strong> {accountInfo.balance?.free} UQs</p>\n//                 </div>\n//               )}\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Polky;\nvar _c;\n$RefreshReg$(_c, \"Polky\");","map":{"version":3,"names":["React","useState","useEffect","Sr25519Account","ThinClient","jsxDEV","_jsxDEV","Fragment","_Fragment","Polky","_s","_accountInfo$balance","mnemonic","setMnemonic","firstNumber","setFirstNumber","secondNumber","setSecondNumber","userAnswer","setUserAnswer","score","setScore","feedback","setFeedback","sdk","setSdk","accountInfo","setAccountInfo","account","fromUri","sdkInstance","baseUrl","fetchAccountInfo","address","balance","get","error","console","generateNewQuestion","num1","Math","floor","random","num2","handleMnemonicSubmit","e","preventDefault","handleSubmit","correctAnswer","parseInt","parsed","collection","create","submitWaitResult","name","description","tokenPrefix","schema","schemaName","schemaVersion","image","urlTemplate","coverPicture","ifpsCid","attributesSchema","Error","collectionId","token","transfer","tokenId","to","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","free","_c","$RefreshReg$"],"sources":["C:/Users/khyy4/Documents/Code-Projects/polkahack/pookey/src/main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Sr25519Account } from \"@unique-nft/sr25519\";\r\nimport {ThinClient} from \"@unique-nft/sdk\";\r\n//import { Sdk } from '@unique-nft/sdk';\r\n\r\n// import { Web3AccountsOptions } from '@polkadot/extension-inject/types';\r\n// import { Account } from '@unique-nft/accounts';\r\n// import { PolkadotProvider } from '@unique-nft/accounts/polkadot';\r\n\r\nconst Polky = () => {\r\n  const [mnemonic, setMnemonic] = useState('');\r\n  const [firstNumber, setFirstNumber] = useState(0);\r\n  const [secondNumber, setSecondNumber] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [sdk, setSdk] = useState(null);\r\n  const [accountInfo, setAccountInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (mnemonic) {\r\n      const account = Sr25519Account.fromUri(mnemonic);\r\n      const sdkInstance = new ThinClient({\r\n        baseUrl: 'https://rest.unique.network/opal/v1', \r\n        account,\r\n      });\r\n      setSdk(sdkInstance);\r\n\r\n      const fetchAccountInfo = async () => {\r\n        try {\r\n          const address = account.address;\r\n          const balance = await sdkInstance.balance.get({ address });\r\n          setAccountInfo({ address, balance });\r\n        } catch (error) {\r\n          console.error('Failed to fetch account information:', error);\r\n        }\r\n      };\r\n\r\n      fetchAccountInfo();\r\n    }\r\n  }, [mnemonic]);\r\n\r\n  const generateNewQuestion = () => {\r\n    const num1 = Math.floor(Math.random() * 10);\r\n    const num2 = Math.floor(Math.random() * 10);\r\n    setFirstNumber(num1);\r\n    setSecondNumber(num2);\r\n  };\r\n\r\n  const handleMnemonicSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (mnemonic) {\r\n      generateNewQuestion();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const correctAnswer = firstNumber + secondNumber;\r\n    if (parseInt(userAnswer) === correctAnswer) {\r\n      setScore(score + 1);\r\n      setFeedback('Correct!');\r\n      \r\n\t  if (score === 10) {\r\n\t\tsetFeedback('Correct! NFT Successful!');\r\n\t  }\r\n      else if ((score + 1) % 5 === 0) {\r\n        try {\r\n          const { parsed, error } = await sdk.collection.create.submitWaitResult({\r\n\t\t\taddress: accountInfo.address,\r\n            name: \"Test collection\",\r\n            description: \"My test collection\",\r\n            tokenPrefix: \"TST\",\r\n\t\t\tschema : {\r\n\r\n\t\t\t\tschemaName : 'unique',\r\n\t\t\t\tschemaVersion : '1.0.0',\r\n\t\t\t\timage : {\r\n\t\t\t\t\turlTemplate: 'https://gateway.pinta.cloud/ipfs/{infix}'\r\n\t\t\t\t}, \r\n\t\t\t\tcoverPicture : { ifpsCid: 'bafybeigdyrzt5sfp7udm7hu76uh7y26nf3efuylqabf3oclgtqy55fbzdi'},\r\n\t\t\t\tattributesSchema : {\r\n\t\t\t\t\t0: {\r\n\t\t\t\t\t\tname : score\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n          });\r\n\r\n          if (error) throw new Error(\"Error occurred while creating a collection\");\r\n\r\n          if (!parsed) throw new Error(\"Cannot parse results\");\r\n\r\n          const { collectionId } = parsed;\r\n\r\n          await sdk.token.create({ collectionId });\r\n\r\n          await sdk.token.transfer({\r\n            collectionId,\r\n            tokenId: 1, \r\n            to: accountInfo.address,\r\n          });\r\n          setFeedback('Correct! You earned an NFT!');\r\n        } catch (error) {\r\n          console.error('Failed to mint and transfer NFT:', error);\r\n          setFeedback('Correct! But there was an error minting the NFT.');\r\n        }\r\n      }\r\n    } else {\r\n      setFeedback(`Incorrect! The correct answer was ${correctAnswer}`);\r\n    }\r\n    setUserAnswer('');\r\n    generateNewQuestion();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-red-50\">\r\n      <div className=\"bg-red-100 shadow-lg rounded-lg p-8\">\r\n        <h1 className=\"text-3xl font-bold text-red-700 mb-4\">PolkyMath</h1>\r\n        {!sdk ? (\r\n          <form onSubmit={handleMnemonicSubmit} className=\"flex flex-col items-center\">\r\n            <input\r\n              type=\"text\"\r\n              value={mnemonic}\r\n              onChange={(e) => setMnemonic(e.target.value)}\r\n              className=\"p-2 border border-red-300 rounded mb-4 focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n              placeholder=\"Enter your mnemonic key\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n            >\r\n              Input Mnemonic\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <>\r\n            <div className=\"flex justify-between\">\r\n              <div>\r\n                <div className=\"text-2xl mb-4\">\r\n                  <span>{firstNumber}</span> + <span>{secondNumber}</span>\r\n                </div>\r\n                <form onSubmit={handleSubmit} className=\"flex flex-col items-center\">\r\n                  <input\r\n                    type=\"number\"\r\n                    value={userAnswer}\r\n                    onChange={(e) => setUserAnswer(e.target.value)}\r\n                    className=\"p-2 border border-red-300 rounded mb-4 focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                    placeholder=\"Your answer\"\r\n                  />\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n                <div className=\"mt-4\">\r\n                  <p className=\"text-xl\">{feedback}</p>\r\n                  <p className=\"text-2xl\">Score: {score}</p>\r\n                </div>\r\n              </div>\r\n              {accountInfo && (\r\n                <div className=\"ml-8 p-4 border border-red-300 rounded bg-red-50\">\r\n                  <h2 className=\"text-xl font-bold\">Account Information</h2>\r\n                  <p><strong>Address:</strong> {accountInfo.address}</p>\r\n                  <p><strong>Balance:</strong> {accountInfo.balance?.free} UQs</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Polky;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Sr25519Account } from \"@unique-nft/sr25519\";\r\n// import { ThinClient } from \"@unique-nft/sdk\";\r\n\r\n// const Polky = () => {\r\n//   const [mnemonic, setMnemonic] = useState('');\r\n//   const [firstNumber, setFirstNumber] = useState(0);\r\n//   const [secondNumber, setSecondNumber] = useState(0);\r\n//   const [userAnswer, setUserAnswer] = useState('');\r\n//   const [score, setScore] = useState(0);\r\n//   const [feedback, setFeedback] = useState('');\r\n//   const [sdk, setSdk] = useState(null);\r\n//   const [accountInfo, setAccountInfo] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (mnemonic) {\r\n//       const account = Sr25519Account.fromUri(mnemonic);\r\n//       const sdkInstance = new ThinClient({\r\n//         baseUrl: 'https://rest.unique.network/opal/v1', \r\n//         account,\r\n//       });\r\n//       setSdk(sdkInstance);\r\n\r\n//       const fetchAccountInfo = async () => {\r\n//         try {\r\n//           const address = account.address;\r\n//           const balance = await sdkInstance.balance.get({ address });\r\n//           setAccountInfo({ address, balance });\r\n//         } catch (error) {\r\n//           console.error('Failed to fetch account information:', error);\r\n//         }\r\n//       };\r\n\r\n//       fetchAccountInfo();\r\n//     }\r\n//   }, [mnemonic]);\r\n\r\n//   const generateNewQuestion = () => {\r\n//     const num1 = Math.floor(Math.random() * 10);\r\n//     const num2 = Math.floor(Math.random() * 10);\r\n//     setFirstNumber(num1);\r\n//     setSecondNumber(num2);\r\n//   };\r\n\r\n//   const handleMnemonicSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (mnemonic) {\r\n//       generateNewQuestion();\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const correctAnswer = firstNumber + secondNumber;\r\n//     if (parseInt(userAnswer) === correctAnswer) {\r\n//       setScore(score + 1);\r\n//       setFeedback('Correct!');\r\n\r\n//       if ((score + 1) % 5 === 0) {\r\n//         // Simulate NFT minting\r\n//         setFeedback('Correct! You earned an NFT!');\r\n//       }\r\n//     } else {\r\n//       setFeedback(`Incorrect! The correct answer was ${correctAnswer}`);\r\n//     }\r\n//     setUserAnswer('');\r\n//     generateNewQuestion();\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex flex-col items-center justify-center min-h-screen bg-red-50\">\r\n//       <div className=\"bg-red-100 shadow-lg rounded-lg p-8\">\r\n//         <h1 className=\"text-3xl font-bold text-red-700 mb-4\">PolkyMath</h1>\r\n//         {!sdk ? (\r\n//           <form onSubmit={handleMnemonicSubmit} className=\"flex flex-col items-center\">\r\n//             <input\r\n//               type=\"text\"\r\n//               value={mnemonic}\r\n//               onChange={(e) => setMnemonic(e.target.value)}\r\n//               className=\"p-2 border border-red-300 rounded mb-4 focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n//               placeholder=\"Enter your mnemonic key\"\r\n//             />\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n//             >\r\n//               Input Mnemonic\r\n//             </button>\r\n//           </form>\r\n//         ) : (\r\n//           <>\r\n//             <div className=\"flex justify-between\">\r\n//               <div>\r\n//                 <div className=\"text-2xl mb-4\">\r\n//                   <span>{firstNumber}</span> + <span>{secondNumber}</span>\r\n//                 </div>\r\n//                 <form onSubmit={handleSubmit} className=\"flex flex-col items-center\">\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     value={userAnswer}\r\n//                     onChange={(e) => setUserAnswer(e.target.value)}\r\n//                     className=\"p-2 border border-red-300 rounded mb-4 focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n//                     placeholder=\"Your answer\"\r\n//                   />\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n//                   >\r\n//                     Submit\r\n//                   </button>\r\n//                 </form>\r\n//                 <div className=\"mt-4\">\r\n//                   <p className=\"text-xl\">{feedback}</p>\r\n//                   <p className=\"text-2xl\">Score: {score}</p>\r\n//                 </div>\r\n//               </div>\r\n//               {accountInfo && (\r\n//                 <div className=\"ml-8 p-4 border border-red-300 rounded bg-red-50\">\r\n//                   <h2 className=\"text-xl font-bold\">Account Information</h2>\r\n//                   <p><strong>Address:</strong> {accountInfo.address}</p>\r\n//                   <p><strong>Balance:</strong> {accountInfo.balance?.free} UQs</p>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Polky;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAAQC,UAAU,QAAO,iBAAiB;AAC1C;;AAEA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,oBAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,GAAG,EAAEC,MAAM,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,EAAE;MACZ,MAAMgB,OAAO,GAAGzB,cAAc,CAAC0B,OAAO,CAACjB,QAAQ,CAAC;MAChD,MAAMkB,WAAW,GAAG,IAAI1B,UAAU,CAAC;QACjC2B,OAAO,EAAE,qCAAqC;QAC9CH;MACF,CAAC,CAAC;MACFH,MAAM,CAACK,WAAW,CAAC;MAEnB,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;QACnC,IAAI;UACF,MAAMC,OAAO,GAAGL,OAAO,CAACK,OAAO;UAC/B,MAAMC,OAAO,GAAG,MAAMJ,WAAW,CAACI,OAAO,CAACC,GAAG,CAAC;YAAEF;UAAQ,CAAC,CAAC;UAC1DN,cAAc,CAAC;YAAEM,OAAO;YAAEC;UAAQ,CAAC,CAAC;QACtC,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC9D;MACF,CAAC;MAEDJ,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACpB,QAAQ,CAAC,CAAC;EAEd,MAAM0B,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3C,MAAMC,IAAI,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3C3B,cAAc,CAACwB,IAAI,CAAC;IACpBtB,eAAe,CAAC0B,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,oBAAoB,GAAIC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIlC,QAAQ,EAAE;MACZ0B,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC;EAED,MAAMS,YAAY,GAAG,MAAOF,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAME,aAAa,GAAGlC,WAAW,GAAGE,YAAY;IAChD,IAAIiC,QAAQ,CAAC/B,UAAU,CAAC,KAAK8B,aAAa,EAAE;MAC1C3B,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MACnBG,WAAW,CAAC,UAAU,CAAC;MAE1B,IAAIH,KAAK,KAAK,EAAE,EAAE;QACnBG,WAAW,CAAC,0BAA0B,CAAC;MACtC,CAAC,MACO,IAAI,CAACH,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QAC9B,IAAI;UACF,MAAM;YAAE8B,MAAM;YAAEd;UAAM,CAAC,GAAG,MAAMZ,GAAG,CAAC2B,UAAU,CAACC,MAAM,CAACC,gBAAgB,CAAC;YAC9EpB,OAAO,EAAEP,WAAW,CAACO,OAAO;YACnBqB,IAAI,EAAE,iBAAiB;YACvBC,WAAW,EAAE,oBAAoB;YACjCC,WAAW,EAAE,KAAK;YAC3BC,MAAM,EAAG;cAERC,UAAU,EAAG,QAAQ;cACrBC,aAAa,EAAG,OAAO;cACvBC,KAAK,EAAG;gBACPC,WAAW,EAAE;cACd,CAAC;cACDC,YAAY,EAAG;gBAAEC,OAAO,EAAE;cAA6D,CAAC;cACxFC,gBAAgB,EAAG;gBAClB,CAAC,EAAE;kBACFV,IAAI,EAAGlC;gBACR;cACD;YACD;UACO,CAAC,CAAC;UAEF,IAAIgB,KAAK,EAAE,MAAM,IAAI6B,KAAK,CAAC,4CAA4C,CAAC;UAExE,IAAI,CAACf,MAAM,EAAE,MAAM,IAAIe,KAAK,CAAC,sBAAsB,CAAC;UAEpD,MAAM;YAAEC;UAAa,CAAC,GAAGhB,MAAM;UAE/B,MAAM1B,GAAG,CAAC2C,KAAK,CAACf,MAAM,CAAC;YAAEc;UAAa,CAAC,CAAC;UAExC,MAAM1C,GAAG,CAAC2C,KAAK,CAACC,QAAQ,CAAC;YACvBF,YAAY;YACZG,OAAO,EAAE,CAAC;YACVC,EAAE,EAAE5C,WAAW,CAACO;UAClB,CAAC,CAAC;UACFV,WAAW,CAAC,6BAA6B,CAAC;QAC5C,CAAC,CAAC,OAAOa,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;UACxDb,WAAW,CAAC,kDAAkD,CAAC;QACjE;MACF;IACF,CAAC,MAAM;MACLA,WAAW,CAAC,qCAAqCyB,aAAa,EAAE,CAAC;IACnE;IACA7B,aAAa,CAAC,EAAE,CAAC;IACjBmB,mBAAmB,CAAC,CAAC;EACvB,CAAC;EAED,oBACEhC,OAAA;IAAKiE,SAAS,EAAC,kEAAkE;IAAAC,QAAA,eAC/ElE,OAAA;MAAKiE,SAAS,EAAC,qCAAqC;MAAAC,QAAA,gBAClDlE,OAAA;QAAIiE,SAAS,EAAC,sCAAsC;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClE,CAACpD,GAAG,gBACHlB,OAAA;QAAMuE,QAAQ,EAAEjC,oBAAqB;QAAC2B,SAAS,EAAC,4BAA4B;QAAAC,QAAA,gBAC1ElE,OAAA;UACEwE,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEnE,QAAS;UAChBoE,QAAQ,EAAGnC,CAAC,IAAKhC,WAAW,CAACgC,CAAC,CAACoC,MAAM,CAACF,KAAK,CAAE;UAC7CR,SAAS,EAAC,2FAA2F;UACrGW,WAAW,EAAC;QAAyB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACFtE,OAAA;UACEwE,IAAI,EAAC,QAAQ;UACbP,SAAS,EAAC,0DAA0D;UAAAC,QAAA,EACrE;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,gBAEPtE,OAAA,CAAAE,SAAA;QAAAgE,QAAA,eACElE,OAAA;UAAKiE,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnClE,OAAA;YAAAkE,QAAA,gBACElE,OAAA;cAAKiE,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC5BlE,OAAA;gBAAAkE,QAAA,EAAO1D;cAAW;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,OAAG,eAAAtE,OAAA;gBAAAkE,QAAA,EAAOxD;cAAY;gBAAAyD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD,CAAC,eACNtE,OAAA;cAAMuE,QAAQ,EAAE9B,YAAa;cAACwB,SAAS,EAAC,4BAA4B;cAAAC,QAAA,gBAClElE,OAAA;gBACEwE,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAE7D,UAAW;gBAClB8D,QAAQ,EAAGnC,CAAC,IAAK1B,aAAa,CAAC0B,CAAC,CAACoC,MAAM,CAACF,KAAK,CAAE;gBAC/CR,SAAS,EAAC,2FAA2F;gBACrGW,WAAW,EAAC;cAAa;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC,eACFtE,OAAA;gBACEwE,IAAI,EAAC,QAAQ;gBACbP,SAAS,EAAC,0DAA0D;gBAAAC,QAAA,EACrE;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACPtE,OAAA;cAAKiE,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnBlE,OAAA;gBAAGiE,SAAS,EAAC,SAAS;gBAAAC,QAAA,EAAElD;cAAQ;gBAAAmD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrCtE,OAAA;gBAAGiE,SAAS,EAAC,UAAU;gBAAAC,QAAA,GAAC,SAAO,EAACpD,KAAK;cAAA;gBAAAqD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACLlD,WAAW,iBACVpB,OAAA;YAAKiE,SAAS,EAAC,kDAAkD;YAAAC,QAAA,gBAC/DlE,OAAA;cAAIiE,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAC;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1DtE,OAAA;cAAAkE,QAAA,gBAAGlE,OAAA;gBAAAkE,QAAA,EAAQ;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAClD,WAAW,CAACO,OAAO;YAAA;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtDtE,OAAA;cAAAkE,QAAA,gBAAGlE,OAAA;gBAAAkE,QAAA,EAAQ;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,GAAAjE,oBAAA,GAACe,WAAW,CAACQ,OAAO,cAAAvB,oBAAA,uBAAnBA,oBAAA,CAAqBwE,IAAI,EAAC,MAAI;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC,gBACN,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClE,EAAA,CAtKID,KAAK;AAAA2E,EAAA,GAAL3E,KAAK;AAwKX,eAAeA,KAAK;;AAGpignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}