{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction parseResult(api, {\n  allIds,\n  allProposals,\n  approvalIds,\n  councilProposals,\n  proposalCount\n}) {\n  const approvals = [];\n  const proposals = [];\n  const councilTreasury = councilProposals.filter(({\n    proposal\n  }) =>\n  // FIXME `approveProposal` and `rejectProposal` have been removed in substrate and released in 1.14\n  // in favor of `spend`. See: https://github.com/paritytech/polkadot-sdk/pull/3820\n  proposal && (api.tx.treasury['approveProposal'] && api.tx.treasury['approveProposal'].is(proposal) || api.tx.treasury['rejectProposal'] && api.tx.treasury['rejectProposal'].is(proposal)));\n  allIds.forEach((id, index) => {\n    if (allProposals[index].isSome) {\n      const council = councilTreasury.filter(({\n        proposal\n      }) => proposal && id.eq(proposal.args[0])).sort((a, b) => a.proposal && b.proposal ? a.proposal.method.localeCompare(b.proposal.method) : a.proposal ? -1 : 1);\n      const isApproval = approvalIds.some(approvalId => approvalId.eq(id));\n      const derived = {\n        council,\n        id,\n        proposal: allProposals[index].unwrap()\n      };\n      if (isApproval) {\n        approvals.push(derived);\n      } else {\n        proposals.push(derived);\n      }\n    }\n  });\n  return {\n    approvals,\n    proposalCount,\n    proposals\n  };\n}\nfunction retrieveProposals(api, proposalCount, approvalIds) {\n  const proposalIds = [];\n  const count = proposalCount.toNumber();\n  for (let index = 0; index < count; index++) {\n    if (!approvalIds.some(id => id.eqn(index))) {\n      proposalIds.push(api.registry.createType('ProposalIndex', index));\n    }\n  }\n  const allIds = [...proposalIds, ...approvalIds];\n  return combineLatest([api.query.treasury.proposals.multi(allIds), api.derive.council ? api.derive.council.proposals() : of([])]).pipe(map(([allProposals, councilProposals]) => parseResult(api, {\n    allIds,\n    allProposals,\n    approvalIds,\n    councilProposals,\n    proposalCount\n  })));\n}\n/**\n * @description Retrieve all active and approved treasury proposals, along with their info\n */\nexport function proposals(instanceId, api) {\n  return memo(instanceId, () => api.query.treasury ? combineLatest([api.query.treasury.proposalCount(), api.query.treasury.approvals()]).pipe(switchMap(([proposalCount, approvalIds]) => retrieveProposals(api, proposalCount, approvalIds))) : of({\n    approvals: [],\n    proposalCount: api.registry.createType('ProposalIndex'),\n    proposals: []\n  }));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","memo","parseResult","api","allIds","allProposals","approvalIds","councilProposals","proposalCount","approvals","proposals","councilTreasury","filter","proposal","tx","treasury","is","forEach","id","index","isSome","council","eq","args","sort","a","b","method","localeCompare","isApproval","some","approvalId","derived","unwrap","push","retrieveProposals","proposalIds","count","toNumber","eqn","registry","createType","query","multi","derive","pipe","instanceId"],"sources":["C:/Users/khyy4/Documents/Code-Projects/polkahack/pookey/node_modules/@polkadot/api-derive/treasury/proposals.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction parseResult(api, { allIds, allProposals, approvalIds, councilProposals, proposalCount }) {\n    const approvals = [];\n    const proposals = [];\n    const councilTreasury = councilProposals.filter(({ proposal }) => \n    // FIXME `approveProposal` and `rejectProposal` have been removed in substrate and released in 1.14\n    // in favor of `spend`. See: https://github.com/paritytech/polkadot-sdk/pull/3820\n    proposal && ((api.tx.treasury['approveProposal'] && api.tx.treasury['approveProposal'].is(proposal)) ||\n        (api.tx.treasury['rejectProposal'] && api.tx.treasury['rejectProposal'].is(proposal))));\n    allIds.forEach((id, index) => {\n        if (allProposals[index].isSome) {\n            const council = councilTreasury\n                .filter(({ proposal }) => proposal && id.eq(proposal.args[0]))\n                .sort((a, b) => a.proposal && b.proposal\n                ? a.proposal.method.localeCompare(b.proposal.method)\n                : a.proposal\n                    ? -1\n                    : 1);\n            const isApproval = approvalIds.some((approvalId) => approvalId.eq(id));\n            const derived = { council, id, proposal: allProposals[index].unwrap() };\n            if (isApproval) {\n                approvals.push(derived);\n            }\n            else {\n                proposals.push(derived);\n            }\n        }\n    });\n    return { approvals, proposalCount, proposals };\n}\nfunction retrieveProposals(api, proposalCount, approvalIds) {\n    const proposalIds = [];\n    const count = proposalCount.toNumber();\n    for (let index = 0; index < count; index++) {\n        if (!approvalIds.some((id) => id.eqn(index))) {\n            proposalIds.push(api.registry.createType('ProposalIndex', index));\n        }\n    }\n    const allIds = [...proposalIds, ...approvalIds];\n    return combineLatest([\n        api.query.treasury.proposals.multi(allIds),\n        api.derive.council\n            ? api.derive.council.proposals()\n            : of([])\n    ]).pipe(map(([allProposals, councilProposals]) => parseResult(api, { allIds, allProposals, approvalIds, councilProposals, proposalCount })));\n}\n/**\n * @description Retrieve all active and approved treasury proposals, along with their info\n */\nexport function proposals(instanceId, api) {\n    return memo(instanceId, () => api.query.treasury\n        ? combineLatest([\n            api.query.treasury.proposalCount(),\n            api.query.treasury.approvals()\n        ]).pipe(switchMap(([proposalCount, approvalIds]) => retrieveProposals(api, proposalCount, approvalIds)))\n        : of({\n            approvals: [],\n            proposalCount: api.registry.createType('ProposalIndex'),\n            proposals: []\n        }));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}