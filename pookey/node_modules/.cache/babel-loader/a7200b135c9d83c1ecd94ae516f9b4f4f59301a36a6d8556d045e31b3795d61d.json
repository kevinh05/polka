{"ast":null,"code":"import { u8aConcat } from '@polkadot/util';\nimport { naclEncrypt, scryptEncode, scryptToU8a } from '@polkadot/util-crypto';\nimport { PAIR_DIV, PAIR_HDR } from './defaults.js';\n/**\n * Encode a pair with the latest generation format (generation 3)\n **/\nexport function encodePair({\n  publicKey,\n  secretKey\n}, passphrase) {\n  if (!secretKey) {\n    throw new Error('Expected a valid secretKey to be passed to encode');\n  }\n  const encoded = u8aConcat(PAIR_HDR, secretKey, PAIR_DIV, publicKey);\n  if (!passphrase) {\n    return encoded;\n  }\n  // this is only for generation 3 (previous generations are only handled in decoding)\n  const {\n    params,\n    password,\n    salt\n  } = scryptEncode(passphrase);\n  const {\n    encrypted,\n    nonce\n  } = naclEncrypt(encoded, password.subarray(0, 32));\n  return u8aConcat(scryptToU8a(salt, params), nonce, encrypted);\n}","map":{"version":3,"names":["u8aConcat","naclEncrypt","scryptEncode","scryptToU8a","PAIR_DIV","PAIR_HDR","encodePair","publicKey","secretKey","passphrase","Error","encoded","params","password","salt","encrypted","nonce","subarray"],"sources":["C:/Users/khyy4/Documents/Code-Projects/polkahack/pookey/node_modules/@polkadot/keyring/pair/encode.js"],"sourcesContent":["import { u8aConcat } from '@polkadot/util';\nimport { naclEncrypt, scryptEncode, scryptToU8a } from '@polkadot/util-crypto';\nimport { PAIR_DIV, PAIR_HDR } from './defaults.js';\n/**\n * Encode a pair with the latest generation format (generation 3)\n **/\nexport function encodePair({ publicKey, secretKey }, passphrase) {\n    if (!secretKey) {\n        throw new Error('Expected a valid secretKey to be passed to encode');\n    }\n    const encoded = u8aConcat(PAIR_HDR, secretKey, PAIR_DIV, publicKey);\n    if (!passphrase) {\n        return encoded;\n    }\n    // this is only for generation 3 (previous generations are only handled in decoding)\n    const { params, password, salt } = scryptEncode(passphrase);\n    const { encrypted, nonce } = naclEncrypt(encoded, password.subarray(0, 32));\n    return u8aConcat(scryptToU8a(salt, params), nonce, encrypted);\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,WAAW,EAAEC,YAAY,EAAEC,WAAW,QAAQ,uBAAuB;AAC9E,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,eAAe;AAClD;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAAC;EAAEC,SAAS;EAAEC;AAAU,CAAC,EAAEC,UAAU,EAAE;EAC7D,IAAI,CAACD,SAAS,EAAE;IACZ,MAAM,IAAIE,KAAK,CAAC,mDAAmD,CAAC;EACxE;EACA,MAAMC,OAAO,GAAGX,SAAS,CAACK,QAAQ,EAAEG,SAAS,EAAEJ,QAAQ,EAAEG,SAAS,CAAC;EACnE,IAAI,CAACE,UAAU,EAAE;IACb,OAAOE,OAAO;EAClB;EACA;EACA,MAAM;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGZ,YAAY,CAACO,UAAU,CAAC;EAC3D,MAAM;IAAEM,SAAS;IAAEC;EAAM,CAAC,GAAGf,WAAW,CAACU,OAAO,EAAEE,QAAQ,CAACI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EAC3E,OAAOjB,SAAS,CAACG,WAAW,CAACW,IAAI,EAAEF,MAAM,CAAC,EAAEI,KAAK,EAAED,SAAS,CAAC;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}